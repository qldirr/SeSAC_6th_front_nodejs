.div1{
    width: 100px;
    height: 100px;
    background-color: aquamarine;
}

/* :hover - 요소에 마우스를 올렸을때*/
.div1:hover{
    background-color: hotpink;
    width: 150px;
    height: 150px;
}

/* :active - 요소를 마우스로 클릭하고 있을때 */
.div1:active{
    background-color: brown;
    width: 200px;
}

/* :focus - 요소에 포커스가 되었을 때 */
input:focus{
    background-color: violet;
    color: lightblue;
    outline-color: yellowgreen;
}

.links>a:hover{
    background-color: coral;
}

.links > a:visited{
    color: red;
}

/* 요소 상황에 따른 가상 클래스 선택자 */
.zoo > *{
    background-color: green;
    color: white;
}

/* 
    E:first-child - 요소가 첫번째 요소라면
*/
.zoo>*:first-child{      /* 전체(*)는 생략 가능 */
    background-color: red;
}

/* 
    E:last-child  - 요소가 마지막 요소라면
*/
.zoo>:last-child{
    background-color: black;
}

/* 
    E:nth-child(n) - n번째 요소라면, (n)의 자리에는 방정식이 들어갈 수 있음 ex.4n+2
*/
.zoo>:nth-child(2){
    background-color: aqua;
}

/* 
    E:not(XYZ) - XYZ가 아닌 요소 선택
*/
.zoo>:not(div){
    background-color: pink;
}

/* 
    가상 요소 선택자  : HTML 문서의 특정 부분을 스타일링하기 위해 사용, 실제 HTML문서에 존재하지 않는 부분이지만 CSS를 통해 스타일 적용이 가능
    Q) 가상 클래스 : VS 가상 요소 :: 차이?
    A) CSS 사양이 발전하면서 가상클래스와 가상요소를 명확하게 구분할 필요성이 생김
        가상 클래스 - 문서의 기존 요소 상태를 나타냄
        가상 요소 - 문서의 특정 부분을 생성해 스타일링함  --> 이를 구분하기 위해 '::'로 표기하는 새로운 표기법 도입
*/
.box::before{
    content: "빨리 ";
}
.box::after{
    content: " 택시";
    color: blue !important;
}
.box::after{
    content: " 택시";
    color: green;
}

